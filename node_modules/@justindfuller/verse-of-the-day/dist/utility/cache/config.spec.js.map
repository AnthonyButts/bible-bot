{"version":3,"sources":["../../../src/utility/cache/config.spec.js"],"names":["t","configData","NODE_ENV","is","host","port","password","REDISHOST","REDISPORT","REDISAUTH"],"mappings":";;AAAA;;;;AACA;;;;;;AAEA,mBAAK,oBAAL,EAA2B,UAACA,CAAD,EAAO;AAChC,MAAMC,aAAa,sBAAO,EAAEC,UAAU,aAAZ,EAAP,CAAnB;AACAF,IAAEG,EAAF,CAAKF,WAAWG,IAAhB,EAAsB,WAAtB;AACD,CAHD;;AAKA,mBAAK,oBAAL,EAA2B,UAACJ,CAAD,EAAO;AAChC,MAAMC,aAAa,sBAAO,EAAEC,UAAU,aAAZ,EAAP,CAAnB;AACAF,IAAEG,EAAF,CAAKF,WAAWI,IAAhB,EAAsB,MAAtB;AACD,CAHD;;AAKA,mBAAK,+BAAL,EAAsC,UAACL,CAAD,EAAO;AAC3C,MAAMC,aAAa,sBAAO,EAAEC,UAAU,aAAZ,EAAP,CAAnB;AACAF,IAAEG,EAAF,CAAKF,WAAWK,QAAhB,EAA0B,EAA1B;AACD,CAHD;;AAKA,mBAAK,kEAAL,EAAyE,UAACN,CAAD,EAAO;AAC9E,MAAMC,aAAa,sBAAO,EAAEC,UAAU,YAAZ,EAA0BK,WAAW,UAArC,EAAP,CAAnB;AACAP,IAAEG,EAAF,CAAKF,WAAWG,IAAhB,EAAsB,UAAtB;AACD,CAHD;;AAKA,mBAAK,kEAAL,EAAyE,UAACJ,CAAD,EAAO;AAC9E,MAAMC,aAAa,sBAAO,EAAEC,UAAU,YAAZ,EAA0BM,WAAW,UAArC,EAAP,CAAnB;AACAR,IAAEG,EAAF,CAAKF,WAAWI,IAAhB,EAAsB,UAAtB;AACD,CAHD;;AAKA,mBAAK,sEAAL,EAA6E,UAACL,CAAD,EAAO;AAClF,MAAMC,aAAa,sBAAO,EAAEC,UAAU,YAAZ,EAA0BO,WAAW,cAArC,EAAP,CAAnB;AACAT,IAAEG,EAAF,CAAKF,WAAWK,QAAhB,EAA0B,cAA1B;AACD,CAHD","file":"config.spec.js","sourcesContent":["import test from 'ava';\r\nimport config from './config';\r\n\r\ntest('It provides a host', (t) => {\r\n  const configData = config({ NODE_ENV: 'development' });\r\n  t.is(configData.host, '127.0.0.1');\r\n});\r\n\r\ntest('It provides a port', (t) => {\r\n  const configData = config({ NODE_ENV: 'development' });\r\n  t.is(configData.port, '6379');\r\n});\r\n\r\ntest('It provides an empty password', (t) => {\r\n  const configData = config({ NODE_ENV: 'development' });\r\n  t.is(configData.password, '');\r\n});\r\n\r\ntest('It provides a host based off environment variables in production', (t) => {\r\n  const configData = config({ NODE_ENV: 'production', REDISHOST: 'TestHost' });\r\n  t.is(configData.host, 'TestHost');\r\n});\r\n\r\ntest('It provides a port based off environment variables in production', (t) => {\r\n  const configData = config({ NODE_ENV: 'production', REDISPORT: 'TestPort' });\r\n  t.is(configData.port, 'TestPort');\r\n});\r\n\r\ntest('It provides a password based off environment variables in production', (t) => {\r\n  const configData = config({ NODE_ENV: 'production', REDISAUTH: 'TestPassword' });\r\n  t.is(configData.password, 'TestPassword');\r\n});\r\n"]}