{"version":3,"sources":["../../../src/utility/cache/index.js"],"names":["cache","key","redisClient","hgetallAsync","getHash","value","HMSETAsync","result","expireAtMidnight","setHash","client","isFunction","getSecondsUntilMidnight","midnight","Date","setHours","seconds","now","Number","toFixed","expireAsync","get","bibleID","set"],"mappings":";;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;AAEA,SAASA,KAAT,GAAuC;AAAA;AAAA,wFAcrC,iBAAuBC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,+CACSC,YAAYC,YAAZ,CAAyBF,GAAzB,CADT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAdqC;;AAAA,oBActBG,OAdsB;AAAA;AAAA;AAAA;;AAAA;AAAA,yFAkBrC,kBAAuBH,GAAvB,EAA4BI,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACuBH,YAAYI,UAAZ,CAAuBL,GAAvB,EAA4BI,KAA5B,CADvB;;AAAA;AACQE,oBADR;;;AAGE,kBAAIA,MAAJ,EAAY;AACVC,iCAAiBP,GAAjB;AACD;;AALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAlBqC;;AAAA,oBAkBtBQ,OAlBsB;AAAA;AAAA;AAAA;;AAAA,MAAxBC,MAAwB;;AACrC,MAAMR,cAAc,iBAAES,UAAF,CAAaD,MAAb,IAAuBA,QAAvB,GAAkCA,MAAtD;;AAEA,WAASE,uBAAT,GAAmC;AACjC,QAAMC,WAAW,IAAIC,IAAJ,EAAjB;AACAD,aAASE,QAAT,CAAkB,EAAlB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B;AACA,QAAMC,UAAU,CAACH,WAAWC,KAAKG,GAAL,EAAZ,IAA0B,IAA1C;AACA,WAAOC,OAAOF,QAAQG,OAAR,EAAP,CAAP;AACD;;AAED,WAASX,gBAAT,CAA0BP,GAA1B,EAA+B;AAC7B,WAAOC,YAAYkB,WAAZ,CAAwBnB,GAAxB,EAA6BW,yBAA7B,CAAP;AACD;;AAcD,WAASS,GAAT,CAAaC,OAAb,EAAsBrB,GAAtB,EAA2B;AACzB,WAAOG,QAAWkB,OAAX,SAAsBrB,GAAtB,CAAP;AACD;;AAED,WAASsB,GAAT,CAAaD,OAAb,EAAsBrB,GAAtB,EAA2BI,KAA3B,EAAkC;AAChC,WAAOI,QAAWa,OAAX,SAAsBrB,GAAtB,EAA6BI,KAA7B,CAAP;AACD;;AAED,SAAO;AACLgB,YADK;AAELE,YAFK;AAGLnB,oBAHK;AAILK;AAJK,GAAP;AAMD;;kBAEcT,K","file":"index.js","sourcesContent":["import _ from 'lodash';\r\nimport defaultClient from './client';\r\n\r\nfunction cache(client = defaultClient) {\r\n  const redisClient = _.isFunction(client) ? client() : client;\r\n\r\n  function getSecondsUntilMidnight() {\r\n    const midnight = new Date();\r\n    midnight.setHours(24, 0, 0, 0);\r\n    const seconds = (midnight - Date.now()) / 1000;\r\n    return Number(seconds.toFixed());\r\n  }\r\n\r\n  function expireAtMidnight(key) {\r\n    return redisClient.expireAsync(key, getSecondsUntilMidnight());\r\n  }\r\n\r\n  async function getHash(key) {\r\n    return redisClient.hgetallAsync(key);\r\n  }\r\n\r\n  async function setHash(key, value) {\r\n    const result = await redisClient.HMSETAsync(key, value);\r\n\r\n    if (result) {\r\n      expireAtMidnight(key);\r\n    }\r\n  }\r\n\r\n  function get(bibleID, key) {\r\n    return getHash(`${bibleID}:${key}`);\r\n  }\r\n\r\n  function set(bibleID, key, value) {\r\n    return setHash(`${bibleID}:${key}`, value);\r\n  }\r\n\r\n  return {\r\n    get,\r\n    set,\r\n    getHash,\r\n    setHash,\r\n  };\r\n}\r\n\r\nexport default cache;\r\n"]}