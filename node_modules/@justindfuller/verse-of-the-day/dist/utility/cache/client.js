'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _redis = require('redis');

var _redis2 = _interopRequireDefault(_redis);

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _config = require('./config');

var _config2 = _interopRequireDefault(_config);

var _logging = require('./../logging');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function handleError() {
  var _$log;

  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  (_$log = (0, _logging.$log)()).error.apply(_$log, ['Redis Error'].concat((0, _toConsumableArray3.default)(args)));
}

var client = void 0;

exports.default = function () {
  if (client) {
    return client;
  }

  try {
    client = _redis2.default.createClient((0, _config2.default)());
    client.on('error', handleError);
    client.on('warning', handleError);
    _bluebird2.default.promisifyAll(_redis2.default.RedisClient.prototype);
    _bluebird2.default.promisifyAll(_redis2.default.Multi.prototype);
  } catch (e) {
    console.error('Unable to start up redis client.');
  }

  return client;
};
//# sourceMappingURL=client.js.map