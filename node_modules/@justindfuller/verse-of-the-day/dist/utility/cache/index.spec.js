'use strict';

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _sinon = require('sinon');

var _sinon2 = _interopRequireDefault(_sinon);

var _index = require('./index');

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _ava2.default)('Calls expire with roughly midnight time', function () {
  var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(t) {
    var expireAsync, HMSETAsync, client;
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            expireAsync = _sinon2.default.stub();
            HMSETAsync = _sinon2.default.stub();

            HMSETAsync.onCall(0).returns(true);
            client = {
              expireAsync: expireAsync,
              HMSETAsync: HMSETAsync
            };
            _context.next = 6;
            return (0, _index2.default)(client).setHash('TestKey', 'FakeValue');

          case 6:
            t.true(expireAsync.calledWith('TestKey'));

          case 7:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, undefined);
  }));

  return function (_x) {
    return _ref.apply(this, arguments);
  };
}());

(0, _ava2.default)('Does not call expire on failure', function () {
  var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(t) {
    var expireAsync, HMSETAsync, client;
    return _regenerator2.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            expireAsync = _sinon2.default.stub();
            HMSETAsync = _sinon2.default.stub();

            HMSETAsync.onCall(0).returns(false);
            client = {
              expireAsync: expireAsync,
              HMSETAsync: HMSETAsync
            };
            _context2.next = 6;
            return (0, _index2.default)(client).setHash('TestKey', 'FakeValue');

          case 6:
            t.false(expireAsync.called);

          case 7:
          case 'end':
            return _context2.stop();
        }
      }
    }, _callee2, undefined);
  }));

  return function (_x2) {
    return _ref2.apply(this, arguments);
  };
}());

(0, _ava2.default)('getHash wraps getall', function () {
  var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3(t) {
    var client, getHash, get;
    return _regenerator2.default.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            client = {
              hgetallAsync: _sinon2.default.stub()
            };

            client.hgetallAsync.onCall(0).returns('Test return value');
            client.hgetallAsync.onCall(1).returns('Test return value 1');
            _context3.next = 5;
            return (0, _index2.default)(client).getHash('Test');

          case 5:
            getHash = _context3.sent;

            t.is(getHash, 'Test return value');
            _context3.next = 9;
            return (0, _index2.default)(client).get('Test');

          case 9:
            get = _context3.sent;

            t.is(get, 'Test return value 1');

          case 11:
          case 'end':
            return _context3.stop();
        }
      }
    }, _callee3, undefined);
  }));

  return function (_x3) {
    return _ref3.apply(this, arguments);
  };
}());

(0, _ava2.default)('Set wraps setHash', function () {
  var _ref4 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee4(t) {
    var client;
    return _regenerator2.default.wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            client = {
              HMSETAsync: _sinon2.default.spy()
            };
            _context4.next = 3;
            return (0, _index2.default)(client).set('BibleID', 'key', 'value');

          case 3:
            t.true(client.HMSETAsync.calledWith('BibleID:key', 'value'));

          case 4:
          case 'end':
            return _context4.stop();
        }
      }
    }, _callee4, undefined);
  }));

  return function (_x4) {
    return _ref4.apply(this, arguments);
  };
}());

(0, _ava2.default)('Get wraps getHash', function () {
  var _ref5 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee5(t) {
    var client;
    return _regenerator2.default.wrap(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            client = {
              hgetallAsync: _sinon2.default.spy()
            };
            _context5.next = 3;
            return (0, _index2.default)(client).get('BibleID', 'key');

          case 3:
            t.true(client.hgetallAsync.calledWith('BibleID:key'));

          case 4:
          case 'end':
            return _context5.stop();
        }
      }
    }, _callee5, undefined);
  }));

  return function (_x5) {
    return _ref5.apply(this, arguments);
  };
}());
//# sourceMappingURL=index.spec.js.map