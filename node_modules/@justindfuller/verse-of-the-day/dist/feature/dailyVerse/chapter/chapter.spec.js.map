{"version":3,"sources":["../../../../src/feature/dailyVerse/chapter/chapter.spec.js"],"names":["t","fetch","stub","returns","chapters","chapter","id","cacheMethods","getHash","setHash","cache","getRandomChapter","res","is","skip","getFullChapter","getRandomNumber","chapterID","true","called","search","result","passages","text","fullText"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,mBAAK,2DAAL;AAAA,sFAAkE,iBAAOA,CAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC1DC,iBAD0D,GAClD,gBAAMC,IAAN,EADkD;;AAEhED,kBAAME,OAAN,CAAc,EAAEC,UAAU,CAAC,EAAEC,SAAS,aAAX,EAA0BC,IAAI,eAA9B,EAAD,CAAZ,EAAd;AACMD,mBAH0D,GAGhD,0BAAW,WAAX,EAAwB;AACtC,gDAAkCJ;AADI,aAAxB,CAHgD;AAM1DM,wBAN0D,GAM3C;AACnBC,uBAAS,gBAAMN,IAAN,EADU;AAEnBO,uBAAS,gBAAMP,IAAN;AAFU,aAN2C;;AAUhEK,yBAAaC,OAAb,CAAqBL,OAArB,CAA6B,CAA7B;;AACMO,iBAX0D,GAWlD,SAARA,KAAQ;AAAA,qBAAMH,YAAN;AAAA,aAXkD;;AAAA,uBAYnCF,QAAQK,KAAR,CAZmC,EAYxDC,gBAZwD,YAYxDA,gBAZwD;AAAA;AAAA,mBAa9CA,iBAAiB,YAAjB,EAA+B,EAA/B,CAb8C;;AAAA;AAa1DC,eAb0D;;AAchEZ,cAAEa,EAAF,CAAKD,IAAIP,OAAT,EAAkB,aAAlB;;AAdgE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlE;;AAAA;AAAA;AAAA;AAAA;;AAiBA,cAAKS,IAAL,CAAU,sDAAV;AAAA,uFAAkE,kBAAOd,CAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC1DK,mBAD0D,GAChD,0BAAW,WAAX,EAAwB,EAAxB,CADgD;AAE1DE,wBAF0D,GAE3C;AACnBC,uBAAS,gBAAMN,IAAN;AADU,aAF2C;;AAKhEK,yBAAaC,OAAb,CAAqBL,OAArB,CAA6B,aAA7B;;AACMO,iBAN0D,GAMlD,SAARA,KAAQ;AAAA,qBAAMH,YAAN;AAAA,aANkD;;AAAA,wBAOrCF,QAAQK,KAAR,CAPqC,EAOxDK,cAPwD,aAOxDA,cAPwD;AAAA;AAAA,mBAQ9CA,eAAe,EAAf,CAR8C;;AAAA;AAQ1DH,eAR0D;;AAShEZ,cAAEa,EAAF,CAAKD,GAAL,EAAU,aAAV;;AATgE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlE;;AAAA;AAAA;AAAA;AAAA;;AAYA,cAAKE,IAAL,CAAU,2CAAV;AAAA,uFAAuD,kBAAOd,CAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC/CC,iBAD+C,GACvC,gBAAMC,IAAN,EADuC;;AAErDD,kBAAME,OAAN,CAAc,EAAEC,UAAU,CAAC,EAAEC,SAAS,aAAX,EAA0BC,IAAI,eAA9B,EAAD,CAAZ,EAAd;AACMU,2BAH+C,GAG7B,gBAAMd,IAAN,EAH6B;;AAIrDc,4BAAgBb,OAAhB,CAAwB,CAAxB;AACME,mBAL+C,GAKrC,0BAAW,WAAX,EAAwB;AACtC,gDAAkCJ,KADI;AAEtC,8CAAgCe;AAFM,aAAxB,CALqC;AAS/CT,wBAT+C,GAShC;AACnBC,uBAAS,gBAAMN,IAAN,EADU;AAEnBO,uBAAS,gBAAMP,IAAN;AAFU,aATgC;;AAa/CQ,iBAb+C,GAavC,SAARA,KAAQ;AAAA,qBAAMH,YAAN;AAAA,aAbuC;;AAAA,wBAcxBF,QAAQK,KAAR,CAdwB,EAc7CC,gBAd6C,aAc7CA,gBAd6C;AAAA;AAAA,mBAenCA,iBAAiB,YAAjB,EAA+B,EAA/B,CAfmC;;AAAA;AAe/CC,eAf+C;;AAgBrDZ,cAAEa,EAAF,CAAKD,IAAIP,OAAT,EAAkB,aAAlB;AACAL,cAAEa,EAAF,CAAKD,IAAIK,SAAT,EAAoB,eAApB;AACAjB,cAAEkB,IAAF,CAAOX,aAAaE,OAAb,CAAqBU,MAA5B;AACAnB,cAAEkB,IAAF,CAAOX,aAAaC,OAAb,CAAqBW,MAA5B;;AAnBqD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvD;;AAAA;AAAA;AAAA;AAAA;;AAsBA,cAAKL,IAAL,CAAU,yCAAV;AAAA,uFAAqD,kBAAOd,CAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC7CC,iBAD6C,GACrC,gBAAMC,IAAN,EADqC;;AAEnDD,kBAAME,OAAN,CAAc,EAAEiB,QAAQ,EAAEC,QAAQ,EAAEC,UAAU,CAAC,EAAEC,MAAM,iBAAR,EAAD,CAAZ,EAAV,EAAV,EAAd;AACMP,2BAH6C,GAG3B,gBAAMd,IAAN,EAH2B;;AAInDc,4BAAgBb,OAAhB,CAAwB,CAAxB;AACME,mBAL6C,GAKnC,0BAAW,WAAX,EAAwB;AACtC,gDAAkCJ;AADI,aAAxB,CALmC;AAQ7CM,wBAR6C,GAQ9B;AACnBC,uBAAS,gBAAMN,IAAN,EADU;AAEnBO,uBAAS,gBAAMP,IAAN;AAFU,aAR8B;;AAY7CQ,iBAZ6C,GAYrC,SAARA,KAAQ;AAAA,qBAAMH,YAAN;AAAA,aAZqC;;AAAA,wBAaxBF,QAAQK,KAAR,CAbwB,EAa3CK,cAb2C,aAa3CA,cAb2C;AAAA;AAAA,mBAcjCA,eAAe,EAAf,CAdiC;;AAAA;AAc7CH,eAd6C;;AAenDZ,cAAEa,EAAF,CAAKD,IAAIY,QAAT,EAAmB,iBAAnB;AACAxB,cAAEkB,IAAF,CAAOX,aAAaE,OAAb,CAAqBU,MAA5B;AACAnB,cAAEkB,IAAF,CAAOX,aAAaC,OAAb,CAAqBW,MAA5B;;AAjBmD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArD;;AAAA;AAAA;AAAA;AAAA","file":"chapter.spec.js","sourcesContent":["import test from 'ava';\r\nimport sinon from 'sinon';\r\nimport proxyquire from 'proxyquire';\r\n\r\ntest('getRandomChapter returns the cached chapter if available.', async (t) => {\r\n  const fetch = sinon.stub();\r\n  fetch.returns({ chapters: [{ chapter: 'ChapterText', id: 'chapterIDText' }] });\r\n  const chapter = proxyquire('./chapter', {\r\n    './../../../utility/fetch/fetch': fetch,\r\n  });\r\n  const cacheMethods = {\r\n    getHash: sinon.stub(),\r\n    setHash: sinon.stub(),\r\n  };\r\n  cacheMethods.getHash.returns(0);\r\n  const cache = () => cacheMethods;\r\n  const { getRandomChapter } = chapter(cache);\r\n  const res = await getRandomChapter('identifier', {});\r\n  t.is(res.chapter, 'ChapterText');\r\n});\r\n\r\ntest.skip('getFullChapter returns the cached text if available.', async (t) => {\r\n  const chapter = proxyquire('./chapter', {});\r\n  const cacheMethods = {\r\n    getHash: sinon.stub(),\r\n  };\r\n  cacheMethods.getHash.returns('Cached Data');\r\n  const cache = () => cacheMethods;\r\n  const { getFullChapter } = chapter(cache);\r\n  const res = await getFullChapter({});\r\n  t.is(res, 'Cached Data');\r\n});\r\n\r\ntest.skip('getRandomChapter returns data from fetch.', async (t) => {\r\n  const fetch = sinon.stub();\r\n  fetch.returns({ chapters: [{ chapter: 'ChapterText', id: 'chapterIDText' }] });\r\n  const getRandomNumber = sinon.stub();\r\n  getRandomNumber.returns(0);\r\n  const chapter = proxyquire('./chapter', {\r\n    './../../../utility/fetch/fetch': fetch,\r\n    './../../../utility/math/math': getRandomNumber,\r\n  });\r\n  const cacheMethods = {\r\n    getHash: sinon.stub(),\r\n    setHash: sinon.stub(),\r\n  };\r\n  const cache = () => cacheMethods;\r\n  const { getRandomChapter } = chapter(cache);\r\n  const res = await getRandomChapter('identifier', {});\r\n  t.is(res.chapter, 'ChapterText');\r\n  t.is(res.chapterID, 'chapterIDText');\r\n  t.true(cacheMethods.setHash.called);\r\n  t.true(cacheMethods.getHash.called);\r\n});\r\n\r\ntest.skip('getFullChapter returns data from fetch.', async (t) => {\r\n  const fetch = sinon.stub();\r\n  fetch.returns({ search: { result: { passages: [{ text: 'FullChapterText' }] } } });\r\n  const getRandomNumber = sinon.stub();\r\n  getRandomNumber.returns(0);\r\n  const chapter = proxyquire('./chapter', {\r\n    './../../../utility/fetch/fetch': fetch,\r\n  });\r\n  const cacheMethods = {\r\n    getHash: sinon.stub(),\r\n    setHash: sinon.stub(),\r\n  };\r\n  const cache = () => cacheMethods;\r\n  const { getFullChapter } = chapter(cache);\r\n  const res = await getFullChapter({});\r\n  t.is(res.fullText, 'FullChapterText');\r\n  t.true(cacheMethods.setHash.called);\r\n  t.true(cacheMethods.getHash.called);\r\n});\r\n"]}