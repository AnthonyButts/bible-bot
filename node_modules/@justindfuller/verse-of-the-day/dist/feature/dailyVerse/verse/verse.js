'use strict';

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _isInteger = require('babel-runtime/core-js/number/is-integer');

var _isInteger2 = _interopRequireDefault(_isInteger);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _lodash = require('lodash');

var _cacheKeys = require('./../../cacheKeys');

var _cacheKeys2 = _interopRequireDefault(_cacheKeys);

var _endpoints = require('./../../endpoints');

var _endpoints2 = _interopRequireDefault(_endpoints);

var _text = require('./../../../utility/text/text');

var _text2 = _interopRequireDefault(_text);

var _fetch = require('./../../../utility/fetch/fetch');

var _fetch2 = _interopRequireDefault(_fetch);

var _math = require('./../../../utility/math/math');

var _math2 = _interopRequireDefault(_math);

var _cache2 = require('./../../../utility/cache');

var _cache3 = _interopRequireDefault(_cache2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function verse() {
  var setVerseNumber = function () {
    var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(original, cacheKey, size) {
      var newVerseNumber;
      return _regenerator2.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              newVerseNumber = original;

              if ((0, _isInteger2.default)(newVerseNumber)) {
                _context.next = 5;
                break;
              }

              newVerseNumber = (0, _math2.default)(size);
              _context.next = 5;
              return setHash(cacheKey, { newVerseNumber: newVerseNumber });

            case 5:
              return _context.abrupt('return', newVerseNumber);

            case 6:
            case 'end':
              return _context.stop();
          }
        }
      }, _callee, this);
    }));

    return function setVerseNumber(_x2, _x3, _x4) {
      return _ref.apply(this, arguments);
    };
  }();

  var getVerseNumber = function () {
    var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(cacheKey, size) {
      var verseNumber;
      return _regenerator2.default.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return getHash(cacheKey);

            case 2:
              verseNumber = _context2.sent;

              verseNumber = Number((0, _lodash.get)(verseNumber, 'newVerseNumber'));
              return _context2.abrupt('return', setVerseNumber(verseNumber, cacheKey, size));

            case 5:
            case 'end':
              return _context2.stop();
          }
        }
      }, _callee2, this);
    }));

    return function getVerseNumber(_x5, _x6) {
      return _ref2.apply(this, arguments);
    };
  }();

  var pickVerse = function () {
    var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3(identifier, verseArray) {
      var cacheKey, verseNumber;
      return _regenerator2.default.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              cacheKey = (0, _cacheKeys2.default)({ identifier: identifier }).verse;
              _context3.next = 3;
              return getVerseNumber(cacheKey, verseArray.length);

            case 3:
              verseNumber = _context3.sent;
              return _context3.abrupt('return', verseArray[verseNumber]);

            case 5:
            case 'end':
              return _context3.stop();
          }
        }
      }, _callee3, this);
    }));

    return function pickVerse(_x7, _x8) {
      return _ref3.apply(this, arguments);
    };
  }();

  var getVerses = function () {
    var _ref4 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee4(chapter) {
      var verses, versesResponse;
      return _regenerator2.default.wrap(function _callee4$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              verses = (0, _endpoints2.default)(chapter).verse;
              _context4.next = 3;
              return (0, _fetch2.default)(verses);

            case 3:
              versesResponse = _context4.sent;
              return _context4.abrupt('return', versesResponse.verses);

            case 5:
            case 'end':
              return _context4.stop();
          }
        }
      }, _callee4, this);
    }));

    return function getVerses(_x11) {
      return _ref4.apply(this, arguments);
    };
  }();

  var getRandomVerse = function () {
    var _ref5 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee5(chapter) {
      var verseArray, verseObj;
      return _regenerator2.default.wrap(function _callee5$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              _context5.next = 2;
              return getRandomVerse.getVerses(chapter);

            case 2:
              verseArray = _context5.sent;
              _context5.next = 5;
              return getRandomVerse.pickVerse(chapter.theme, verseArray);

            case 5:
              verseObj = _context5.sent;
              return _context5.abrupt('return', getRandomVerse.createVerseData(chapter, verseObj));

            case 7:
            case 'end':
              return _context5.stop();
          }
        }
      }, _callee5, this);
    }));

    return function getRandomVerse(_x12) {
      return _ref5.apply(this, arguments);
    };
  }();

  var cache = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _cache3.default;

  var _cache = cache(),
      getHash = _cache.getHash,
      setHash = _cache.setHash;

  function createVerseData() {
    var chapter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var randomVerse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    return (0, _assign2.default)({}, chapter, {
      verse: randomVerse.verse,
      reference: randomVerse.reference,
      text: (0, _text2.default)(randomVerse.text)
    });
  }

  getRandomVerse.pickVerse = pickVerse;
  getRandomVerse.createVerseData = createVerseData;
  getRandomVerse.getVerseNumber = getVerseNumber;
  getRandomVerse.setVerseNumber = setVerseNumber;
  getRandomVerse.getVerses = getVerses;
  return getRandomVerse;
}

module.exports = verse;
//# sourceMappingURL=verse.js.map