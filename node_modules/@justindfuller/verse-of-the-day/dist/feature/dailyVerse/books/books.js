'use strict';

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _isInteger = require('babel-runtime/core-js/number/is-integer');

var _isInteger2 = _interopRequireDefault(_isInteger);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var getRandomIndex = function () {
  var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(bookArray) {
    var cacheKey, bookIndex;
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            cacheKey = (0, _cacheKeys2.default)().bookIndex;
            _context.next = 3;
            return getHash(cacheKey);

          case 3:
            bookIndex = _context.sent;

            bookIndex = Number((0, _lodash.get)(bookIndex, 'bookIndex'));

            if ((0, _isInteger2.default)(bookIndex)) {
              _context.next = 9;
              break;
            }

            bookIndex = (0, _math2.default)(bookArray.length);
            _context.next = 9;
            return setHash(cacheKey, { bookIndex: bookIndex });

          case 9:
            return _context.abrupt('return', bookIndex);

          case 10:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  return function getRandomIndex(_x) {
    return _ref2.apply(this, arguments);
  };
}();

var getRandomBook = function () {
  var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(bookArray) {
    var bookIndex;
    return _regenerator2.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return getRandomIndex(bookArray);

          case 2:
            bookIndex = _context2.sent;
            return _context2.abrupt('return', bookArray[bookIndex]);

          case 4:
          case 'end':
            return _context2.stop();
        }
      }
    }, _callee2, this);
  }));

  return function getRandomBook(_x2) {
    return _ref3.apply(this, arguments);
  };
}();

var getBook = function () {
  var _ref4 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3(props) {
    var url, res, applicator, book;
    return _regenerator2.default.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            url = (0, _endpoints2.default)(props).books;
            _context3.next = 3;
            return (0, _fetch2.default)(url);

          case 3:
            res = _context3.sent;
            applicator = props.bookName === 'random' ? getRandomBook : getBookByName;
            _context3.next = 7;
            return applicator(res.books, props.bookName);

          case 7:
            book = _context3.sent;
            return _context3.abrupt('return', createData(props, book));

          case 9:
          case 'end':
            return _context3.stop();
        }
      }
    }, _callee3, this);
  }));

  return function getBook(_x3) {
    return _ref4.apply(this, arguments);
  };
}();

var _lodash = require('lodash');

var _cacheKeys = require('./../../cacheKeys');

var _cacheKeys2 = _interopRequireDefault(_cacheKeys);

var _endpoints = require('./../../endpoints');

var _endpoints2 = _interopRequireDefault(_endpoints);

var _fetch = require('./../../../utility/fetch/fetch');

var _fetch2 = _interopRequireDefault(_fetch);

var _math = require('./../../../utility/math/math');

var _math2 = _interopRequireDefault(_math);

var _cache2 = require('./../../../utility/cache');

var _cache3 = _interopRequireDefault(_cache2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _cache = (0, _cache3.default)(),
    getHash = _cache.getHash,
    setHash = _cache.setHash;

function createData(props, book) {
  return (0, _assign2.default)({}, props, {
    bookName: (0, _lodash.get)(book, 'name'),
    bookAbbr: (0, _lodash.get)(book, 'abbr'),
    bookID: (0, _lodash.get)(book, 'id'),
    copyright: (0, _lodash.get)(book, 'copyright')
  });
}

function getBookByName(bookArray, bookName) {
  var filterBooks = function filterBooks(_ref) {
    var name = _ref.name;
    return name.toLowerCase().indexOf(bookName.toLowerCase()) > -1;
  };
  return bookArray.filter(filterBooks)[0];
}

module.exports = getBook;
//# sourceMappingURL=books.js.map