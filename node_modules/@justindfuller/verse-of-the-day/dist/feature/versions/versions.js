'use strict';

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var getListOfVersions = function () {
  var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
    var res, versions;
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return (0, _fetch2.default)((0, _endpoints2.default)().versions);

          case 2:
            res = _context.sent;
            versions = res.versions.map(createVersion);
            return _context.abrupt('return', versions);

          case 5:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  return function getListOfVersions() {
    return _ref.apply(this, arguments);
  };
}();

var _endpoints = require('./../endpoints');

var _endpoints2 = _interopRequireDefault(_endpoints);

var _fetch = require('./../../utility/fetch/fetch');

var _fetch2 = _interopRequireDefault(_fetch);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function createVersion(version) {
  return {
    id: version.id,
    name: version.name,
    language: version.lang_name
  };
}

module.exports = getListOfVersions;
//# sourceMappingURL=versions.js.map