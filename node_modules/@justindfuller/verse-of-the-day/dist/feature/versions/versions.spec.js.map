{"version":3,"sources":["../../../src/feature/versions/versions.spec.js"],"names":["t","fetchMock","stub","returns","versions","id","name","lang_name","getListOfVersions","res","true","called","is","language"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,mBAAK,qBAAL;AAAA,sFAA4B,iBAAOA,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBC,qBADoB,GACR,gBAAMC,IAAN,EADQ;;AAE1BD,sBAAUE,OAAV,CAAkB;AAChBC,wBAAU,CACR;AACEC,oBAAI,QADN;AAEEC,sBAAM,UAFR;AAGEC,2BAAW;AAHb,eADQ;AADM,aAAlB;AASMC,6BAXoB,GAWA,0BAAW,YAAX,EAAyB;AACjD,6CAA+BP;AADkB,aAAzB,CAXA;AAAA;AAAA,mBAcRO,mBAdQ;;AAAA;AAcpBC,eAdoB;;AAe1BT,cAAEU,IAAF,CAAOT,UAAUU,MAAjB;AACAX,cAAEY,EAAF,CAAKH,IAAI,CAAJ,EAAOJ,EAAZ,EAAgB,QAAhB;AACAL,cAAEY,EAAF,CAAKH,IAAI,CAAJ,EAAOH,IAAZ,EAAkB,UAAlB;AACAN,cAAEY,EAAF,CAAKH,IAAI,CAAJ,EAAOI,QAAZ,EAAsB,UAAtB;;AAlB0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA","file":"versions.spec.js","sourcesContent":["import test from 'ava';\r\nimport sinon from 'sinon';\r\nimport proxyquire from 'proxyquire';\r\n\r\ntest('It fetches the data', async (t) => {\r\n  const fetchMock = sinon.stub();\r\n  fetchMock.returns({\r\n    versions: [\r\n      {\r\n        id: 'TestID',\r\n        name: 'TestName',\r\n        lang_name: 'TestLang',\r\n      },\r\n    ],\r\n  });\r\n  const getListOfVersions = proxyquire('./versions', {\r\n    './../../utility/fetch/fetch': fetchMock,\r\n  });\r\n  const res = await getListOfVersions();\r\n  t.true(fetchMock.called);\r\n  t.is(res[0].id, 'TestID');\r\n  t.is(res[0].name, 'TestName');\r\n  t.is(res[0].language, 'TestLang');\r\n});\r\n"]}